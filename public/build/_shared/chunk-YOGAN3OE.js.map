{
  "version": 3,
  "sources": ["../../../app/components/auth/ProtectedRoute.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\components\\\\\\\\auth\\\\\\\\ProtectedRoute.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\components\\\\auth\\\\ProtectedRoute.tsx\");\n  import.meta.hot.lastModified = \"1750111050975.4924\";\n}\n// REMIX HMR END\n\nimport React from 'react';\nimport { Navigate, useLocation } from '@remix-run/react';\nimport { useAuth } from '../../context/AuthContext';\nconst ProtectedRoute = ({\n  children,\n  requiredRole\n}) => {\n  _s();\n  const {\n    user,\n    loading\n  } = useAuth();\n  const location = useLocation();\n  if (loading) {\n    return <div>Loading...</div>; // Or your loading component\n  }\n  if (!user) {\n    // Redirect to login if not authenticated\n    return <Navigate to=\"/login\" state={{\n      from: location\n    }} replace />;\n  }\n  if (requiredRole && user.role !== requiredRole) {\n    // Redirect to appropriate dashboard if role doesn't match\n    return <Navigate to={`/${user.role}/dashboard`} replace />;\n  }\n  return <>{children}</>;\n};\n_s(ProtectedRoute, \"zPafkKLdz6KrRvMe2id3iDpNU34=\", false, function () {\n  return [useAuth, useLocation];\n});\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAmCW;AAlCX,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,sDAAwD,EAAE;AAAA,EACnG;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAA2C;AAC3C,cAAY,IAAI,eAAe;AACjC;AAMA,IAAM,iBAAiB,CAAC;AAAA,EACtB;AAAA,EACA;AACF,MAAM;AACJ,KAAG;AACH,QAAM;AAAA,IACJ;AAAA,IACA;AAAA,EACF,IAAI,QAAQ;AACZ,QAAM,WAAW,YAAY;AAC7B,MAAI,SAAS;AACX,WAAO,mDAAC,SAAI,0BAAL;AAAA;AAAA;AAAA;AAAA,WAAe;AAAA,EACxB;AACA,MAAI,CAAC,MAAM;AAET,WAAO,mDAAC,YAAS,IAAG,UAAS,OAAO;AAAA,MAClC,MAAM;AAAA,IACR,GAAG,SAAO,QAFH;AAAA;AAAA;AAAA;AAAA,WAEI;AAAA,EACb;AACA,MAAI,gBAAgB,KAAK,SAAS,cAAc;AAE9C,WAAO,mDAAC,YAAS,IAAI,IAAI,KAAK,kBAAkB,SAAO,QAAhD;AAAA;AAAA;AAAA;AAAA,WAAiD;AAAA,EAC1D;AACA,SAAO,sFAAG,YAAH;AAAA;AAAA;AAAA;AAAA,SAAY;AACrB;AACA,GAAG,gBAAgB,gCAAgC,OAAO,WAAY;AACpE,SAAO,CAAC,SAAS,WAAW;AAC9B,CAAC;AACD,KAAK;AACL,IAAO,yBAAQ;AACf,IAAI;AACJ,aAAa,IAAI,gBAAgB;AAEjC,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": []
}
