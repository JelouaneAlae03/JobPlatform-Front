{
  "version": 3,
  "sources": ["../../../app/components/MyApplications.tsx", "../../../app/routes/applications.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\components\\\\\\\\MyApplications.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\components\\\\MyApplications.tsx\");\n  import.meta.hot.lastModified = \"1748185184041.2388\";\n}\n// REMIX HMR END\n\nimport { useState } from 'react';\nimport Pagination from './Pagination';\n\n// Mock applications data\nconst mockApplications = [{\n  id: 1,\n  jobTitle: 'Senior Software Engineer',\n  company: 'Tech Corp',\n  status: 'Under Review',\n  appliedDate: '2024-02-15',\n  lastUpdated: '2024-02-16'\n}, {\n  id: 2,\n  jobTitle: 'Frontend Developer',\n  company: 'Web Solutions Inc',\n  status: 'Interview Scheduled',\n  appliedDate: '2024-02-10',\n  lastUpdated: '2024-02-14'\n}, {\n  id: 3,\n  jobTitle: 'Full Stack Developer',\n  company: 'Digital Innovations',\n  status: 'Rejected',\n  appliedDate: '2024-02-01',\n  lastUpdated: '2024-02-05'\n}];\nexport default function MyApplications() {\n  _s();\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsPerPage, setItemsPerPage] = useState(10);\n  const [filter, setFilter] = useState('all');\n  const totalPages = Math.ceil(mockApplications.length / itemsPerPage);\n  const startIndex = (currentPage - 1) * itemsPerPage;\n  const endIndex = startIndex + itemsPerPage;\n  const currentApplications = mockApplications.slice(startIndex, endIndex);\n  const handlePageChange = page => {\n    setCurrentPage(page);\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth'\n    });\n  };\n  const handleItemsPerPageChange = newItemsPerPage => {\n    setItemsPerPage(newItemsPerPage);\n    setCurrentPage(1);\n  };\n  const getStatusColor = status => {\n    switch (status.toLowerCase()) {\n      case 'under review':\n        return 'bg-yellow-100 text-yellow-800';\n      case 'interview scheduled':\n        return 'bg-green-100 text-green-800';\n      case 'rejected':\n        return 'bg-red-100 text-red-800';\n      default:\n        return 'bg-gray-100 text-gray-800';\n    }\n  };\n  return <div className=\"space-y-6\">\r\n            {/* Header Section */}\r\n            <div className=\"bg-white rounded-lg shadow-md p-4 sm:p-6\">\r\n                <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between gap-4\">\r\n                    <h2 className=\"text-xl sm:text-2xl font-semibold text-blue-900\">My Applications</h2>\r\n                    <div className=\"flex gap-2\">\r\n                        <select value={filter} onChange={e => setFilter(e.target.value)} className=\"px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\">\r\n                            <option value=\"all\">All Applications</option>\r\n                            <option value=\"under_review\">Under Review</option>\r\n                            <option value=\"interview\">Interview Scheduled</option>\r\n                            <option value=\"rejected\">Rejected</option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Applications List */}\r\n            <div className=\"space-y-4\">\r\n                {currentApplications.map(application => <div key={application.id} className=\"bg-white rounded-lg shadow-md p-4 sm:p-6 hover:shadow-lg transition-shadow\">\r\n                        <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between gap-4\">\r\n                            <div className=\"flex-1\">\r\n                                <h3 className=\"text-lg sm:text-xl font-semibold text-blue-900\">{application.jobTitle}</h3>\r\n                                <p className=\"text-gray-600\">{application.company}</p>\r\n                            </div>\r\n                            <div className=\"flex flex-wrap items-center gap-4\">\r\n                                <span className={`px-3 py-1 rounded-full text-sm ${getStatusColor(application.status)}`}>\r\n                                    {application.status}\r\n                                </span>\r\n                                <div className=\"text-sm text-gray-600\">\r\n                                    <p>Applied: {application.appliedDate}</p>\r\n                                    <p>Last Updated: {application.lastUpdated}</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"mt-4 flex flex-col sm:flex-row sm:items-center sm:justify-between gap-4\">\r\n                            <div className=\"flex gap-2\">\r\n                                <button className=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 cursor-pointer\">\r\n                                    View Details\r\n                                </button>\r\n                                <button className=\"px-4 py-2 border border-blue-600 text-blue-600 rounded-md hover:bg-blue-50 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 cursor-pointer\">\r\n                                    Withdraw\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>)}\r\n            </div>\r\n\r\n            {/* Pagination */}\r\n            <div className=\"mt-6\">\r\n                <Pagination currentPage={currentPage} totalPages={totalPages} onPageChange={handlePageChange} itemsPerPage={itemsPerPage} onItemsPerPageChange={handleItemsPerPageChange} />\r\n            </div>\r\n        </div>;\n}\n_s(MyApplications, \"2csvr2UesRqWfiKrBrfoS+E9K+0=\");\n_c = MyApplications;\nvar _c;\n$RefreshReg$(_c, \"MyApplications\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\routes\\\\\\\\applications.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\routes\\\\applications.tsx\");\n  import.meta.hot.lastModified = \"1747946160868.6875\";\n}\n// REMIX HMR END\n\nimport DashboardLayout from '~/components/DashboardLayout';\nimport MyApplications from '~/components/MyApplications';\nexport default function Applications() {\n  return <DashboardLayout title=\"My Applications\">\r\n            <MyApplications />\r\n        </DashboardLayout>;\n}\n_c = Applications;\nvar _c;\n$RefreshReg$(_c, \"Applications\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAqBA,mBAAyB;AA8DL;AAlFpB,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,8CAAgD,EAAE;AAAA,EAC3F;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAqC;AACrC,cAAY,IAAI,eAAe;AACjC;AAOA,IAAM,mBAAmB,CAAC;AAAA,EACxB,IAAI;AAAA,EACJ,UAAU;AAAA,EACV,SAAS;AAAA,EACT,QAAQ;AAAA,EACR,aAAa;AAAA,EACb,aAAa;AACf,GAAG;AAAA,EACD,IAAI;AAAA,EACJ,UAAU;AAAA,EACV,SAAS;AAAA,EACT,QAAQ;AAAA,EACR,aAAa;AAAA,EACb,aAAa;AACf,GAAG;AAAA,EACD,IAAI;AAAA,EACJ,UAAU;AAAA,EACV,SAAS;AAAA,EACT,QAAQ;AAAA,EACR,aAAa;AAAA,EACb,aAAa;AACf,CAAC;AACc,SAAR,iBAAkC;AACvC,KAAG;AACH,QAAM,CAAC,aAAa,cAAc,QAAI,uBAAS,CAAC;AAChD,QAAM,CAAC,cAAc,eAAe,QAAI,uBAAS,EAAE;AACnD,QAAM,CAAC,QAAQ,SAAS,QAAI,uBAAS,KAAK;AAC1C,QAAM,aAAa,KAAK,KAAK,iBAAiB,SAAS,YAAY;AACnE,QAAM,cAAc,cAAc,KAAK;AACvC,QAAM,WAAW,aAAa;AAC9B,QAAM,sBAAsB,iBAAiB,MAAM,YAAY,QAAQ;AACvE,QAAM,mBAAmB,UAAQ;AAC/B,mBAAe,IAAI;AACnB,WAAO,SAAS;AAAA,MACd,KAAK;AAAA,MACL,UAAU;AAAA,IACZ,CAAC;AAAA,EACH;AACA,QAAM,2BAA2B,qBAAmB;AAClD,oBAAgB,eAAe;AAC/B,mBAAe,CAAC;AAAA,EAClB;AACA,QAAM,iBAAiB,YAAU;AAC/B,YAAQ,OAAO,YAAY,GAAG;AAAA,MAC5B,KAAK;AACH,eAAO;AAAA,MACT,KAAK;AACH,eAAO;AAAA,MACT,KAAK;AACH,eAAO;AAAA,MACT;AACE,eAAO;AAAA,IACX;AAAA,EACF;AACA,SAAO,mDAAC,SAAI,WAAU,aAEZ;AAAA,uDAAC,SAAI,WAAU,4CACX,6DAAC,SAAI,WAAU,sEACX;AAAA,yDAAC,QAAG,WAAU,mDAAkD,+BAAhE;AAAA;AAAA;AAAA;AAAA,aAA+E;AAAA,MAC/E,mDAAC,SAAI,WAAU,cACX,6DAAC,YAAO,OAAO,QAAQ,UAAU,OAAK,UAAU,EAAE,OAAO,KAAK,GAAG,WAAU,mGACvE;AAAA,2DAAC,YAAO,OAAM,OAAM,gCAApB;AAAA;AAAA;AAAA;AAAA,eAAoC;AAAA,QACpC,mDAAC,YAAO,OAAM,gBAAe,4BAA7B;AAAA;AAAA;AAAA;AAAA,eAAyC;AAAA,QACzC,mDAAC,YAAO,OAAM,aAAY,mCAA1B;AAAA;AAAA;AAAA;AAAA,eAA6C;AAAA,QAC7C,mDAAC,YAAO,OAAM,YAAW,wBAAzB;AAAA;AAAA;AAAA;AAAA,eAAiC;AAAA,WAJrC;AAAA;AAAA;AAAA;AAAA,aAKA,KANJ;AAAA;AAAA;AAAA;AAAA,aAOA;AAAA,SATJ;AAAA;AAAA;AAAA;AAAA,WAUA,KAXJ;AAAA;AAAA;AAAA;AAAA,WAYA;AAAA,IAGA,mDAAC,SAAI,WAAU,aACV,8BAAoB,IAAI,iBAAe,mDAAC,SAAyB,WAAU,8EACpE;AAAA,yDAAC,SAAI,WAAU,sEACX;AAAA,2DAAC,SAAI,WAAU,UACX;AAAA,6DAAC,QAAG,WAAU,kDAAkD,sBAAY,YAA5E;AAAA;AAAA;AAAA;AAAA,iBAAqF;AAAA,UACrF,mDAAC,OAAE,WAAU,iBAAiB,sBAAY,WAA1C;AAAA;AAAA;AAAA;AAAA,iBAAkD;AAAA,aAFtD;AAAA;AAAA;AAAA;AAAA,eAGA;AAAA,QACA,mDAAC,SAAI,WAAU,qCACX;AAAA,6DAAC,UAAK,WAAW,kCAAkC,eAAe,YAAY,MAAM,KAC/E,sBAAY,UADjB;AAAA;AAAA;AAAA;AAAA,iBAEA;AAAA,UACA,mDAAC,SAAI,WAAU,yBACX;AAAA,+DAAC,OAAE;AAAA;AAAA,cAAU,YAAY;AAAA,iBAAzB;AAAA;AAAA;AAAA;AAAA,mBAAqC;AAAA,YACrC,mDAAC,OAAE;AAAA;AAAA,cAAe,YAAY;AAAA,iBAA9B;AAAA;AAAA;AAAA;AAAA,mBAA0C;AAAA,eAF9C;AAAA;AAAA;AAAA;AAAA,iBAGA;AAAA,aAPJ;AAAA;AAAA;AAAA;AAAA,eAQA;AAAA,WAbJ;AAAA;AAAA;AAAA;AAAA,aAcA;AAAA,MACA,mDAAC,SAAI,WAAU,2EACX,6DAAC,SAAI,WAAU,cACX;AAAA,2DAAC,YAAO,WAAU,wJAAuJ,4BAAzK;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA,QACA,mDAAC,YAAO,WAAU,qKAAoK,wBAAtL;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA,WANJ;AAAA;AAAA;AAAA;AAAA,aAOA,KARJ;AAAA;AAAA;AAAA;AAAA,aASA;AAAA,SAzB0C,YAAY,IAAtB;AAAA;AAAA;AAAA;AAAA,WA0BpC,CAAM,KA3Bd;AAAA;AAAA;AAAA;AAAA,WA4BA;AAAA,IAGA,mDAAC,SAAI,WAAU,QACX,6DAAC,cAAW,aAA0B,YAAwB,cAAc,kBAAkB,cAA4B,sBAAsB,4BAAhJ;AAAA;AAAA;AAAA;AAAA,WAA0K,KAD9K;AAAA;AAAA;AAAA;AAAA,WAEA;AAAA,OAlDH;AAAA;AAAA;AAAA;AAAA,SAmDD;AACR;AACA,GAAG,gBAAgB,8BAA8B;AACjD,KAAK;AACL,IAAI;AACJ,aAAa,IAAI,gBAAgB;AAEjC,OAAO,eAAe;AACtB,OAAO,eAAe;;;AClHV,IAAAA,0BAAA;AAvBZ,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,wCAA0C,EAAE;AAAA,EACrF;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAON,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAA+B;AAC/B,cAAY,IAAI,eAAe;AACjC;AAKe,SAAR,eAAgC;AACrC,SAAO,oDAAC,mBAAgB,OAAM,mBACpB,8DAAC,oBAAD;AAAA;AAAA;AAAA;AAAA,SAAgB,KADnB;AAAA;AAAA;AAAA;AAAA,SAED;AACR;AACAC,MAAK;AACL,IAAIA;AACJ,aAAaA,KAAI,cAAc;AAE/B,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": ["import_jsx_dev_runtime", "_c"]
}
