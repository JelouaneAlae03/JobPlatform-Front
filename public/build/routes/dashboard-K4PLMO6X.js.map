{
  "version": 3,
  "sources": ["../../../app/components/JobListings.tsx", "../../../app/routes/dashboard.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\components\\\\\\\\JobListings.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\components\\\\JobListings.tsx\");\n  import.meta.hot.lastModified = \"1749943262836.825\";\n}\n// REMIX HMR END\n\nimport { useState, useEffect } from 'react';\nimport Pagination from './Pagination';\nimport axios from 'axios';\nimport Cookies from 'js-cookie';\nimport { toast } from 'react-hot-toast';\nexport default function JobListings() {\n  _s();\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsPerPage, setItemsPerPage] = useState(10);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [searchInput, setSearchInput] = useState('');\n  const [jobs, setJobs] = useState([]);\n  const [savedOffers, setSavedOffers] = useState([]);\n  const [pagination, setPagination] = useState({\n    total: 0,\n    per_page: 10,\n    current_page: 1,\n    last_page: 1\n  });\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    setSearchInput(searchQuery);\n  }, []);\n  useEffect(() => {\n    fetchJobs();\n  }, [currentPage, itemsPerPage, searchQuery]);\n  useEffect(() => {\n    const checkSavedStatus = async () => {\n      const token = Cookies.get('access_token');\n      if (!token) return;\n      try {\n        const response = await axios.get('http://127.0.0.1:8000/api/saved-offers', {\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        const savedOfferIds = response.data.map(saved => saved.id_offre);\n        setSavedOffers(savedOfferIds);\n      } catch (error) {\n        console.error('Error fetching saved offers:', error);\n      }\n    };\n    checkSavedStatus();\n  }, []);\n  const fetchJobs = async () => {\n    try {\n      setIsLoading(true);\n      const response = await axios.get('http://127.0.0.1:8000/api/job-listings', {\n        params: {\n          page: currentPage,\n          per_page: itemsPerPage,\n          search: searchQuery\n        },\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${Cookies.get('access_token')}`\n        }\n      });\n      setJobs(response.data.jobs);\n      setPagination(response.data.pagination);\n      setError('');\n    } catch (err) {\n      setError(err.response?.data?.message || 'Failed to fetch job listings');\n      console.error('Error fetching jobs:', err);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handlePageChange = page => {\n    setCurrentPage(page);\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth'\n    });\n  };\n  const handleItemsPerPageChange = newItemsPerPage => {\n    setItemsPerPage(newItemsPerPage);\n    setCurrentPage(1);\n  };\n  const handleSaveOffer = async offerId => {\n    const token = Cookies.get('access_token');\n    if (!token) {\n      toast.error('Please login to save offers');\n      window.location.href = '/login';\n      return;\n    }\n    try {\n      if (savedOffers.includes(offerId)) {\n        // Unsave the offer\n        const response = await axios.delete(`http://127.0.0.1:8000/api/saved-offers/${offerId}`, {\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        if (response.data.saved === false) {\n          setSavedOffers(prev => prev.filter(id => id !== offerId));\n          toast.success('Offer unsaved successfully!');\n        }\n      } else {\n        // Save the offer\n        const response = await axios.post('http://127.0.0.1:8000/api/saved-offers', {\n          id_offre: offerId\n        }, {\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        if (response.data.saved) {\n          setSavedOffers(prev => [...prev, offerId]);\n          toast.success('Offer saved successfully!');\n        }\n      }\n    } catch (error) {\n      if (error.response?.status === 401) {\n        toast.error('Please login to save offers');\n        window.location.href = '/login';\n      } else {\n        toast.error(error.response?.data?.message || 'Failed to save/unsave offer');\n      }\n    }\n  };\n  if (isLoading) {\n    return <div className=\"flex justify-center items-center min-h-[400px]\">\n                <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600\"></div>\n            </div>;\n  }\n  if (error) {\n    return <div className=\"bg-red-50 p-4 rounded-md\">\n                <p className=\"text-red-700\">{error}</p>\n            </div>;\n  }\n  return <div className=\"space-y-6\">\n            {/* Search and Filter Section */}\n            <div className=\"bg-white rounded-lg shadow-md p-4 sm:p-6\">\n                <div className=\"flex flex-col sm:flex-row gap-4\">\n                    <div className=\"flex-1 flex gap-2\">\n                        <input type=\"text\" placeholder=\"Search jobs...\" className=\"w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\" value={searchInput} onChange={e => setSearchInput(e.target.value)} onKeyDown={e => {\n            if (e.key === 'Enter') {\n              setSearchQuery(searchInput);\n              setCurrentPage(1);\n            }\n          }} />\n                        <button className=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500\" onClick={() => {\n            setSearchQuery(searchInput);\n            setCurrentPage(1);\n          }}>\n                            Search\n                        </button>\n                    </div>\n                </div>\n            </div>\n\n            {/* Job Listings */}\n            <div className=\"space-y-4\">\n                {jobs.map(job => <div key={job.id} className=\"bg-white rounded-lg shadow-md p-4 sm:p-6 hover:shadow-lg transition-shadow cursor-pointer\">\n                        <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between gap-4\">\n                            <div className=\"flex-1\">\n                                <h3 className=\"text-lg sm:text-xl font-semibold text-blue-900\">{job.title}</h3>\n                                <p className=\"text-gray-600\">{job.company}</p>\n                                <p className=\"text-gray-500 text-sm mt-1\">\n                                    <span className=\"font-medium\">Email:</span> {job.company_email}\n                                </p>\n                            </div>\n                            <div className=\"flex flex-wrap gap-2\">\n                                <span className=\"px-3 py-1 bg-blue-100 text-blue-800 rounded-full text-sm\">\n                                    {job.type}\n                                </span>\n                                <span className=\"px-3 py-1 bg-green-100 text-green-800 rounded-full text-sm\">\n                                    {job.location}\n                                </span>\n                            </div>\n                        </div>\n                        <div className=\"mt-4\">\n                            <p className=\"text-gray-600\">{job.description}</p>\n                            <div className=\"mt-4 flex flex-wrap gap-2\">\n                                {job.requirements.map((req, index) => <span key={index} className=\"px-3 py-1 bg-gray-100 text-gray-800 rounded-full text-sm\">\n                                        {req}\n                                    </span>)}\n                            </div>\n                        </div>\n                        <div className=\"mt-4 flex flex-col sm:flex-row sm:items-center sm:justify-between gap-4\">\n                            <div className=\"text-gray-600\">\n                                <span className=\"font-medium\">{job.salary}</span>\n                                <span className=\"mx-2\">\u2022</span>\n                                <span>Posted {job.posted}</span>\n                            </div>\n                            <div className=\"flex gap-2\">\n                                <button className=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 cursor-pointer\" onClick={() => {\n              const subject = `Candidature au poste de ${job.title}`;\n              const mailtoLink = `mailto:${job.company_email}?subject=${encodeURIComponent(subject)}`;\n              window.location.href = mailtoLink;\n            }}>\n                                    Apply Now\n                                </button>\n                                <button className={`px-4 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-offset-2 cursor-pointer ${savedOffers.includes(job.id) ? 'border-green-600 text-green-600 hover:bg-green-50 focus:ring-green-500' : 'border-blue-600 text-blue-600 hover:bg-blue-50 focus:ring-blue-500'}`} onClick={() => handleSaveOffer(job.id)}>\n                                    {savedOffers.includes(job.id) ? 'Saved' : 'Save'}\n                                </button>\n                            </div>\n                        </div>\n                    </div>)}\n            </div>\n\n            {/* Pagination */}\n            <div className=\"mt-6\">\n                <Pagination currentPage={pagination.current_page} totalPages={pagination.last_page} onPageChange={handlePageChange} itemsPerPage={pagination.per_page} onItemsPerPageChange={handleItemsPerPageChange} />\n            </div>\n        </div>;\n}\n_s(JobListings, \"HG/gNpoyP1gqRWcoE8l7Bwhk358=\");\n_c = JobListings;\nvar _c;\n$RefreshReg$(_c, \"JobListings\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\routes\\\\\\\\dashboard.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\routes\\\\dashboard.tsx\");\n  import.meta.hot.lastModified = \"1747945837115.3662\";\n}\n// REMIX HMR END\n\nimport DashboardLayout from '~/components/DashboardLayout';\nimport JobListings from '~/components/JobListings';\nexport default function Dashboard() {\n  return <DashboardLayout title=\"Job Listings\">\r\n            <JobListings />\r\n        </DashboardLayout>;\n}\n_c = Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": ["error", "import_jsx_dev_runtime", "_c"]
}
